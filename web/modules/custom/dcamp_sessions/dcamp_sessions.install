<?php
/**
 * @file
 *
 * Install hooks for dcamp_sessions module.
 */

use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\redirect\Entity\Redirect;
use Symfony\Component\HttpFoundation\Response;

/**
 * Implements hook_install().
 */
function dcamp_sessions_install() {
  $menu_link = MenuLinkContent::create([
    'title' => 'Proposed sessions',
    'link' => ['uri' => 'internal:/sessions/proposed'],
    'menu_name' => 'main',
    'expanded' => TRUE,
  ]);
  $menu_link->save();
}

/**
 * Create new session aliases and redirections.
 */
function dcamp_sessions_update_8101() {
  /** @var \Drupal\Core\Path\AliasStorage $aliasStorage */
  $aliasStorage = \Drupal::service('path.alias_storage');
  $pathAutoAliasCleaner = \Drupal::service('pathauto.alias_cleaner');

  // First turn old session aliases into redirections.
  $sessions = \Drupal::service('dcamp_sessions.proposals')->getProposals();
  foreach ($sessions as $key => $session) {
    // Replace the old alias by the new one.
    $aliasStorage->delete(['source' => '/sessions/proposed/' . $key]);
    $alias = '/sessions/' . $pathAutoAliasCleaner->cleanString($session->getTitle() . '-' . $session->getTwitter());
    $aliasStorage->save('/sessions/' . $key, $alias);

    // Create a redirection from the old alias to the new source.
    $redirect = Redirect::create();
    $redirect->setSource('/sessions/proposed/' . $pathAutoAliasCleaner->cleanString($session->getTitle() . '-' . $session->getTwitter()));
    $redirect->setRedirect('/sessions/' . $key);
    $redirect->setStatusCode(Response::HTTP_MOVED_PERMANENTLY);
    $redirect->save();
  }

  // Create a redirection from the temporary page to the new listing.
  $redirect = Redirect::create();
  $redirect->setSource('sessions-selected');
  $redirect->setRedirect('/sessions/selected');
  $redirect->setStatusCode(Response::HTTP_MOVED_PERMANENTLY);
  $redirect->save();
}

/**
 * Fix wrong session alias.
 */
function dcamp_sessions_update_8102() {
  /** @var \Drupal\Core\Path\AliasStorage $alias_storage */
  $alias_storage = \Drupal::service('path.alias_storage');
  $alias_storage->delete(['alias' => '/sessions/casos-de-exito-de-drupal-en-espana']);
  $alias_storage->save('/sessions/84', '/sessions/casos-de-exito-de-drupal-en-espana');
}
